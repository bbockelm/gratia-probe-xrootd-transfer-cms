#!/bin/sh
#
# Startup script for xrootd-transfer-cms
#
# chkconfig: 345 85 15
# description: Gratia transfer accounting for an Xrootd SE
# processname: xrootd-transfer-cms

# Source function library.
. /etc/rc.d/init.d/functions

exec="/usr/share/gratia/xrootd-transfer-cms/xrootd-transfer-cms"
prog="xrootd-transfer-cms"
config="/etc/gratia/xrootd-transfer-cms/ProbeConfig"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

start() {
    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6

    if [ "`/usr/share/gratia/common/GetProbeConfigAttribute -c $config EnableProbe`" -eq 0 ]; then
      echo "$prog" 'probe disabled.  Set EnableProbe="1" in '$config'.'
      exit 6
    fi

    echo -n $"Starting $prog: "
    # --force is added because the process may not have died.
    # In such a case, because we use POSIX locking, the second daemon will wait
    # for up to 18 seconds for the old one to exit; so, we want to force a start
    # even if the old one exists.
    daemon --force $exec -d -r 10
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc $prog -INT
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
